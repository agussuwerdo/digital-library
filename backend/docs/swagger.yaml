basePath: /api
definitions:
  models.Book:
    properties:
      author:
        type: string
      category:
        type: string
      created_at:
        type: string
      id:
        type: integer
      isbn:
        type: string
      quantity:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.CategoryDistribution:
    properties:
      category:
        type: string
      count:
        type: integer
    type: object
  models.LendingRecord:
    properties:
      book_id:
        description: Foreign key to Book
        type: integer
      borrow_date:
        type: string
      borrower:
        type: string
      created_at:
        type: string
      id:
        type: integer
      return_date:
        description: Pointer to allow null
        type: string
      updated_at:
        type: string
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.MonthlyTrend:
    properties:
      count:
        type: integer
      month:
        description: Format YYYY-MM
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: https://digital-library-backend.werdev.my.id
info:
  contact: {}
  description: This is the API documentation for the Digital Library application
  title: Digital Library API
  version: "1.0"
paths:
  /analytics/category-distribution:
    get:
      consumes:
      - application/json
      description: Get the distribution of books across categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryDistribution'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get category distribution
      tags:
      - analytics
  /analytics/monthly-trends:
    get:
      consumes:
      - application/json
      description: Get lending counts grouped by month
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MonthlyTrend'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get monthly lending trends
      tags:
      - analytics
  /analytics/most-borrowed:
    get:
      consumes:
      - application/json
      description: Get a list of books ordered by number of times borrowed
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get most borrowed books
      tags:
      - analytics
  /books:
    get:
      consumes:
      - application/json
      description: Get all books with optional search and filtering
      parameters:
      - description: Search term for title or author
        in: query
        name: search
        type: string
      - description: Filter by category
        in: query
        name: category
        type: string
      - description: Filter by author
        in: query
        name: author
        type: string
      - description: Filter by availability (true/false)
        in: query
        name: available
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book with the provided information
      parameters:
      - description: Book object
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get a single book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update an existing book with the provided information
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book object
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a book
      tags:
      - books
  /lending:
    get:
      consumes:
      - application/json
      description: Get all lending records with optional search and filtering
      parameters:
      - description: Search term
        in: query
        name: search
        type: string
      - description: Filter by status (active/returned)
        in: query
        name: status
        type: string
      - description: Filter by book ID
        in: query
        name: book_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.LendingRecord'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get lending records
      tags:
      - lending
    post:
      consumes:
      - application/json
      description: Create a new lending record for a book
      parameters:
      - description: Lending record object
        in: body
        name: lending
        required: true
        schema:
          $ref: '#/definitions/models.LendingRecord'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.LendingRecord'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Lend a book
      tags:
      - lending
  /lending/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a lending record by its ID
      parameters:
      - description: Lending Record ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a lending record
      tags:
      - lending
  /lending/{id}/return:
    put:
      consumes:
      - application/json
      description: Mark a lending record as returned and update book availability
      parameters:
      - description: Lending Record ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LendingRecord'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Return a book
      tags:
      - lending
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user account with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
